<?xml version="1.0"?>

<robot name="robot_arm" xmlns:xacro="http://wiki.ros.org/xacro">
  <xacro:arg name="use_gazebo" default="false" />
  <xacro:arg name="use_ignition" default="false" />
  <xacro:arg name="use_fake_hardware" default="false" />

  <link name="world" />

  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.3 0.2 0.1"/>
      </geometry>
      <origin xyz="0 0 0"/>
      <material name="green">
        <color rgba="0 0.8 .8 1"/>
      </material>
    </visual>
    <inertial>
      <mass value="100"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>

  <link name="arm_base">
    <inertial>
      <origin
        xyz="7.7128E-09 -0.063005 -3.01969999961422E-08"
        rpy="0 0 0" />
      <mass
        value="1.6004" />
      <inertia
        ixx="0.00552196561445819"
        ixy="7.9550614501301E-10"
        ixz="-1.34378458924839E-09"
        iyy="0.00352397447953875"
        iyz="-1.10071809773382E-08"
        izz="0.00553739792746489" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/arm_base.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/arm_base.stl" />
      </geometry>
    </collision>
  </link>

  <link name="bicep">
    <inertial>
      <origin
        xyz="0.12821 3.5589E-06 0.052492"
        rpy="0 0 0" />
      <mass
        value="1.1198" />
      <inertia
        ixx="0.0012474"
        ixy="-5.4004E-07"
        ixz="-0.0013148"
        iyy="0.0072923"
        iyz="-1.8586E-07"
        izz="0.0068178" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 -1.5708 0" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/bicep.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 -1.5708 0" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/bicep.stl" />
      </geometry>
    </collision>
  </link>

  <link name="bottom_wrist">
    <inertial>
      <origin
        xyz="-9.1053E-08 -0.069257 -1.86629999995759E-07"
        rpy="0 0 0" />
      <mass
        value="0.27721" />
      <inertia
        ixx="0.00104290750143942"
        ixy="4.37155302268076E-09"
        ixz="-2.45049603914627E-09"
        iyy="0.000380518373895034"
        iyz="-7.56009835172156E-09"
        izz="0.00106006525067445" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0.13522"
        rpy="3.14 0 1.5708" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/wrist.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0.13522"
        rpy="3.14 0 1.5708" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/wrist.stl" />
      </geometry>
    </collision>
  </link>

  <link name="elbow">
    <inertial>
      <origin
        xyz="-0.11109 1.1476E-08 0.046469"
        rpy="0 0 0" />
      <mass
        value="0.84845" />
      <inertia
        ixx="0.00079656"
        ixy="-7.8011E-10"
        ixz="0.00053616"
        iyy="0.003576"
        iyz="4.6326E-10"
        izz="0.0033698" />
    </inertial>
    <visual>
      <origin
        xyz="0.0 0.05163 0.20994"
        rpy="0 -1.5708 0" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/elbow.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0.0 0.05163 0.20994"
        rpy="0 -1.5708 0" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/elbow.stl" />
      </geometry>
    </collision>
  </link>

  <link name="top_wrist">
    <inertial>
      <origin
        xyz="-9.1053E-08 -0.069257 -1.86629999995759E-07"
        rpy="0 0 0" />
      <mass
        value="0.27721" />
      <inertia
        ixx="0.00104290750143942"
        ixy="4.37155302268076E-09"
        ixz="-2.45049603914627E-09"
        iyy="0.000380518373895034"
        iyz="-7.56009835172156E-09"
        izz="0.00106006525067445" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0.13522"
        rpy="3.14 0 1.5708" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/wrist.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.79216 0.81961 0.93333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0.13522"
        rpy="3.14 0 1.5708" />
      <geometry>
        <mesh filename="file://$(find pick_and_place_description)/meshes/wrist.stl" />
      </geometry>
    </collision>
  </link>

  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
      <origin xyz="0 0 0"/>
      <material name="green">
        <color rgba="0 0.8 .8 1"/>
      </material>
    </visual>
    <inertial>
      <mass value="1"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>

  <!--######################################################################-->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0" />
    <parent link="world" />
    <child link="base_link" />
  </joint>

  <joint name="arm_base_joint" type="revolute">
    <axis xyz="0 0 1" />
    <parent link="base_link" />
    <child link="arm_base" />
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0" />
    <limit effort="0" lower="-3.14" upper="3.14" velocity="3.67"/>
  </joint>

  <joint name="shoulder_joint" type="revolute">
    <axis xyz="0 1 0" />
    <parent link="arm_base" />
    <child link="bicep" />
    <origin rpy="0 0 1.5708" xyz="-0.05166 0.0 0.20271" />
    <limit effort="0" lower="-3.14" upper="3.14" velocity="3.67"/>
  </joint>

  <joint name="bottom_wrist_joint" type="revolute">
    <axis xyz="0 1 0" />
    <parent link="bicep" />
    <child link="bottom_wrist" />
    <origin rpy="0 0 0" xyz="0.0 -0.05194 0.269" />
    <limit effort="0" lower="-3.14" upper="3.14" velocity="3.67"/>
  </joint>

  <joint name="elbow_joint" type="fixed">
    <axis xyz="0 0 1"/>
    <parent link="bottom_wrist" />
    <child link="elbow" />
    <origin rpy="0 0 0" xyz="0.0 0 0.13522" />
  </joint>

  <joint name="top_wrist_joint" type="revolute">
    <axis xyz="0 1 0" />
    <parent link="elbow" />
    <child link="top_wrist" />
    <origin rpy="0 0 0" xyz="0.0 0 0.20994" />
    <limit effort="0" lower="-3.14" upper="3.14" velocity="3.67"/>
  </joint>

  <joint name="camera_joint" type="fixed">
    <origin rpy="0 1.57 0" xyz="0 0 1.2" />
    <parent link="world" />
    <child link="camera_link" />
  </joint>

  <!--######################################################################-->

  <ros2_control name="robot_arm" type="system">
    <hardware>
      <xacro:if value="$(arg use_gazebo)">
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </xacro:if>
      <xacro:if value="$(arg use_ignition)">
        <plugin>ign_ros2_control/IgnitionSystem</plugin>
      </xacro:if>
      <xacro:if value="$(arg use_fake_hardware)">
        <plugin>mock_components/GenericSystem</plugin>
      </xacro:if>
    </hardware>
    <joint name="arm_base_joint">
      <command_interface name="position">
        <param name="min">-180</param>
        <param name="max">180</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity" />
      <state_interface name="effort" />
    </joint>
    <joint name="shoulder_joint">
      <command_interface name="position">
        <param name="min">-180</param>
        <param name="max">180</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity" />
      <state_interface name="effort" />
    </joint>
    <joint name="bottom_wrist_joint">
      <command_interface name="position">
        <param name="min">-180</param>
        <param name="max">180</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity" />
      <state_interface name="effort" />
    </joint>
    <joint name="top_wrist_joint">
      <command_interface name="position">
        <param name="min">-180</param>
        <param name="max">180</param>
      </command_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="velocity" />
      <state_interface name="effort" />
    </joint>
  </ros2_control>

  <xacro:if value="$(arg use_gazebo)">
    <gazebo>
      <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
        <parameters>$(find pick_and_place_description)/config/robot_controller.yaml</parameters>
      </plugin>
      <plugin filename='libgazebo_ros_vacuum_gripper.so' name='vacuum_gripper'>
        <link_name>top_wrist</link_name>
        <max_distance>0.5</max_distance>
        <fixed>ground_plane</fixed>
      </plugin>
    </gazebo>
  </xacro:if>

  <xacro:if value="$(arg use_ignition)">
    <gazebo>
      <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <parameters>$(find pick_and_place_description)/config/robot_controller.yaml</parameters>
        <controller_manager_node_name>controller_manager</controller_manager_node_name>
      </plugin>
    </gazebo>
  </xacro:if>

  <gazebo reference="camera_link">
    <sensor type="depth" name="depth_camera">
      <update_rate>60</update_rate>
      <visualize>false</visualize>
      <camera>
        <horizontal_fov>1.92</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <depth_camera>
        </depth_camera>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>/</namespace>
        </ros>
        <camera_name>depth_camera</camera_name>
        <min_depth>0.1</min_depth>
        <max_depth>500</max_depth>
      </plugin>
    </sensor>
  </gazebo>

</robot>